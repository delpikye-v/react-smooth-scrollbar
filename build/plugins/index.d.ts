export { default as AnchorPlugin, type AnchorPluginOptions } from './AnchorPlugin';
export { default as BounceEffectPlugin, type BounceEffectOptions } from './BounceEffectPlugin';
export { default as ContentSizePlugin } from './ContentSizePlugin';
export { default as EdgeBouncePlugin, type EdgeBounceOptions } from './EdgeBouncePlugin';
export { default as EdgeEasingPlugin, type EdgeEasingOptions } from './EdgeEasingPlugin';
export { default as FadeScrollPlugin, type FadeScrollOptions } from './FadeScrollPlugin';
export { default as GradientIndicatorPlugin, type GradientIndicatorOptions } from './GradientIndicatorPlugin';
export { default as HighlightItemPlugin, type HighlightItemOptions } from './HighlightItemPlugin';
export { default as HistoryScrollPlugin, type HistoryScrollOptions } from './HistoryScrollPlugin';
export { default as MinimapPlugin, type MinimapOptions } from './MinimapPlugin';
export { default as MouseWheelPlugin, type MouseWheelOptions } from './MouseWheelPlugin';
export { default as MomentumPlugin, type MomentumOptions } from './MomentumPlugin';
export { default as OverscrollGlowPlugin, type OverscrollGlowOptions } from './OverscrollGlowPlugin';
export { default as ResizePlugin, type ResizePluginOptions } from './ResizePlugin';
export { default as ScrollBlurPlugin, type ScrollBlurOptions } from './ScrollBlurPlugin';
export { default as ScrollHintPlugin, type ScrollHintOptions } from './ScrollHintPlugin';
export { default as ScrollLockPlugin, type ScrollLockOptions } from './ScrollLockPlugin';
export { default as ScrollProgressPlugin, type ScrollProgressOptions } from './ScrollProgressPlugin';
export { default as ScrollSnapPlugin, type ScrollSnapOptions } from './ScrollSnapPlugin';
export { default as StickyScrollPlugin, type StickyOptions } from './StickyScrollPlugin';
export { default as VirtualScrollPlugin, type VirtualScrollOptions } from './VirtualScrollPlugin';
export { default as WheelPlugin, type WheelOptions } from './WheelPlugin';
export declare const pluginLoaders: Record<string, () => Promise<any>>;
